{
	// Place your events workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Getter": {
		"prefix": "get",
		"body": [
			"public ${2:Type} ${1:attribute}() { return ${1:attribute}; }"
		],
		"description": "Getter"
	},
	"Setter": {
		"prefix": "set",
		"body": [
			"public ${TM_FILENAME_BASE} ${1:attribute}(${2:Type} ${1:attribute}) { ",
			"  this.${1:attribute} = ${1:attribute};",
			"  return this;",
			"}"
		],
		"description": "Setter"
	},
	"WithSetter": {
		"prefix": "with",
		"body": [
			"public ${TM_FILENAME_BASE} with${1/(.*)/${1:/pascalcase}/}(${2:Type} ${1:attribute}) { ",
			"  this.${1:attribute} = ${1:attribute};",
			"  return this;",
			"}"
		],
		"description": "WithSetter"
	},
	"Id-Class": {
		"prefix": "idclass",
		"body": [
			"import java.util.UUID;",
			"",
			"import main.roles.EntityId;",
			"",
			"public class ${TM_FILENAME_BASE} extends EntityId {",
			"    public ${TM_FILENAME_BASE}(UUID id) { super(id); }",
			"",
			"    public ${TM_FILENAME_BASE}() { super(); }",
			"}"
		],
		"description": "Custom Entity ID class"
	},
	}
}